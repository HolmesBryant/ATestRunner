/**
 * @author Holmes Bryant <https://github.com/HolmesBryant>
 * @license GPL-3.0
 */
class t extends HTMLElement{container;static observerAttributes=["file"];static template='\n    <style>\n      :host {\n        --bg1-color: white;\n        --bg2-color: hsl(30, 66.667%, 90%);\n        --bg3-color: hsl(30, 66.667%, 97%);\n        --bg4-color:  snow;\n        --accent-color: dodgerblue;\n        --accent-text: rgb(40,40,40);\n        --border-color: silver;\n        --text-color: dimgray;\n        --min: 35px;\n        --pad: .5rem;\n        --gap:  .25rem;\n      }\n\n      @media (prefers-color-scheme: dark) {\n        :host {\n          --bg1-color: rgb(20, 20, 20);\n          --bg2-color: rgb(40,40,40);\n          --bg3-color: rgb(60, 60, 60);\n          --bg4-color:  gainsboro;\n          --border-color: dimgray;\n          --text-color: snow;\n        }\n      }\n\n      a { color: var(--accent-color )}\n\n      blockquote {\n        background: var(--bg3-color);\n        font-family: "Courier New", ui-monospace;\n        padding: var(--pad);\n        white-space: pre-wrap;\n      }\n\n      main {\n        background: var(--bg1-color);\n        min-height: 200px;\n        padding: var(--pad);\n        border-radius: 0.5rem;\n      }\n\n      h1,\n      h2,\n      h3 {\n        margin-top: 1.5rem;\n        margin-bottom: 0.5rem;\n      }\n\n      table {\n        border-collapse: collapse;\n        width: 100%;\n        margin: 1rem 0;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n        border-radius: 0.5rem;\n        overflow: hidden; /* For rounded corners on the table */\n      }\n\n      th,\n      td {\n        border: 1px solid var(--border-color);\n        padding: 12px;\n        text-align: left;\n      }\n\n      th {\n        background-color: var(--bg2-color);\n        font-weight: 600;\n        color: var(--text-color);\n      }\n\n      main tr:nth-child(even) {\n        background-color: var(--bg3-color);\n      }\n    </style>\n    <main></main>\n  ';constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=t.template}attributeChangedCallback(t,e,n){if(n!==e&&"file"===t)this.getFile(n)}connectedCallback(){this.container=this.shadowRoot.querySelector("main"),this.file?this.getFile(this.file):this.updateHtml()}getFile(t){fetch(t).then(t=>t.text()).then(t=>{this.updateHtml(t)})}markdownToHtml(t){if(!t)return"";let e=t.replace(/\r\n/g,"\n").trim().replace(/</g,"&lt;").replace(/>/g,"&gt;");e=e.replace(/\[([^\]]+)\]\(([^)]+)\)/g,'<a href="$2">$1</a>'),e=e.replace(/(\*\*|__)(.*?)\1/g,"<strong>$2</strong>"),e=e.replace(/(\*|_)(.*?)\1/g,"<em>$2</em>");const n=e.split("\n");let r=[],o=!1,i="",a=0;for(let t=0;t<n.length;t++){let e=n[t],l=e.trim();if(o){if(!l.startsWith("|")||!l.endsWith("|")){o=!1,i+="</tbody></table>",r.push(i),i="",a=0,""!==l&&t--;continue}{let t=this.parseTableRowCells(l);for(;t.length<a;)t.push("");t=t.slice(0,a),i+="<tr>"+t.map(t=>`<td>${t}</td>`).join("")+"</tr>"}o&&t===n.length-1&&(o=!1,i+="</tbody></table>",r.push(i),a=0)}else{if(!o&&e.startsWith("    ")){let e=[],o=t;for(;o<n.length;){const t=n[o];if(!t.startsWith("    ")&&""!==t.trim())break;e.push(t.startsWith("    ")?t.substring(4):""),o++}if(e.length>0){for(;e.length>0&&""===e[e.length-1].trim();)e.pop();const n=e.join("\n");r.push(`<blockquote>${n}</blockquote>`),t=o-1;continue}}if(l.startsWith("|")&&l.endsWith("|")&&!o){if((n[t+1]?n[t+1].trim():"").match(/^\|[ \t]*:?-{2,}[ \t]*:?([ \t]*\|[ \t]*:?-{2,}[ \t]*:?)*\|$/)){const e=this.parseTableRowCells(l);if(a=e.length,0===a)continue;o=!0,i="<table>",i+="<thead><tr>"+e.map(t=>`<th>${t}</th>`).join("")+"</tr></thead><tbody>",t++;continue}}if(l.match(/^#{1,6}\s/)){const t=l.indexOf(" "),e=l.substring(t+1).trim();r.push(`<h${t}>${e}</h${t}>`)}else if(""!==l){let e=l;for(;t+1<n.length&&""!==n[t+1].trim()&&!n[t+1].trim().startsWith("#")&&!n[t+1].trim().startsWith("|")&&!n[t+1].startsWith("    ");)e+=" "+n[t+1].trim(),t++;r.push(`<p>${e}</p>`)}}}return r.join("\n")}parseTableRowCells(t){return t.trim().replace(/^\s*\||\|\s*$/g,"").split("|").map(t=>t.trim())}updateHtml(t){const e=t||this.textContent,n=this.container,r=this.markdownToHtml(e);n.innerHTML=r}get file(){return this.getAttribute("file")}set file(t){this.setAttribute("file",t)}}document.addEventListener("DOMContentLoaded",()=>{customElements.get("a-markdown")||customElements.define("a-markdown",t)});export{t as default};
